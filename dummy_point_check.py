import numpy as np
q = -0.76505532392946469

dh = np.float64(2.0)*np.pi/np.float64(8.0)

val = (q+np.float64(1.0))*dh
# fortran_val = 0.234944701194763183593750000000000000
# val = q+np.float64(1.0)
# val = q
pstr = "%18.32f\n" % val
print(pstr)
# output: 1.8452511708580682e-01

# issue was fixed with using D-1 and D0 in coefficients instead of e-01 and e+00
# 0.234944701194763183593750000000000000      
# 0.117472350597381591796875000000000000      
# 1.11747235059738159179687500000000000      
# 0.117472350597381591796875000000000000      
# 0.184525136818329276764471241344556934      
# 0.184525136818329276764471241344556934     